workspacePath:
  kind: panel.input.text
  id: workspacePath
  name: workspacePath
  label: Workspace Path
  description: >
    The directory (as it appears to XNAT) containing user namespaced subdirectories (workspaces). JupyterHub is 
    responsible for mounting a user's workspace directory to the container running their Jupyter notebook server.

jupyterhubApiUrl:
  kind: panel.input.text
  id: jupyterHubApiUrl
  name: jupyterHubApiUrl
  label: JupyterHub API URL
  description: >
    The URL for the JupyterHub API

jupyterHubToken:
  kind: panel.input.password
  id: jupyterHubToken
  name: jupyterHubToken
  label: JupyterHub Token
  description: >
    The service token used by XNAT to launch a user's Jupyter Notebook Servers

startTimeout:
  kind: panel.input.number
  id: startTimeout
  name: startTimeout
  label: Start Timeout
  afterElement: <span class="after">seconds</span>
  validation: integer gte:1 onblur
  description: >
    Amount of time (in seconds) before giving up on starting a single-user server. XNAT will assume that startup has failed if it takes longer than this.

startPollingInterval:
  kind: panel.input.number
  id: startPollingInterval
  name: startPollingInterval
  label: Start Polling Interval
  validation: integer gte:1 onblur
  description: >
    The rate (in seconds) at which to poll JupyterHub to check if the single-user server has started.

stopTimeout:
  kind: panel.input.number
  id: stopTimeout
  name: stopTimeout
  label: Stop Timeout
  afterElement: <span class="after">seconds</span>
  validation: integer gte:1 onblur
  description: >
    Amount of time (in seconds) before giving up on stopping a single-user server. XNAT will assume that stopping has failed if it takes longer than this.

stopPollingInterval:
  kind: panel.input.number
  id: stopPollingInterval
  name: stopPollingInterval
  label: Stop Polling Interval
  validation: integer gte:1 onblur
  description: >
    The rate (in seconds) at which to poll JupyterHub to check if the single-user server has stopped.

pathTranslationArchivePrefix:
  kind: panel.input.text
  id: pathTranslationArchivePrefix
  name: pathTranslationArchivePrefix
  label: Path Translation XNAT Archive Prefix
  description: >
    (Optional) Enter the XNAT archive path as seen by XNAT, i.e. "/data/xnat/archive"

pathTranslationArchiveDockerPrefix:
    kind: panel.input.text
    id: pathTranslationArchiveDockerPrefix
    name: pathTranslationArchiveDockerPrefix
    label: Path Translation Docker Archive Prefix
    description: >
        (Optional) Enter the Docker Server path to the XNAT archive mount, i.e. "/docker/my-data/XNAT/archive"

pathTranslationWorkspacePrefix:
  kind: panel.input.text
  id: pathTranslationWorkspacePrefix
  name: pathTranslationWorkspacePrefix
  label: Path Translation User Workspace Prefix
  description: >
    (Optional) Enter the user workspace path as seen by XNAT, i.e. "/data/xnat/workspaces"

pathTranslationWorkspaceDockerPrefix:
    kind: panel.input.text
    id: pathTranslationWorkspaceDockerPrefix
    name: pathTranslationWorkspaceDockerPrefix
    label: Path Translation Docker User Workspace Prefix
    description: >
        (Optional) Enter the Docker Server path to the user workspace mount, i.e. "/docker/my-data/XNAT/workspaces"

inactivityTimeout:
  kind: panel.input.number
  id: inactivityTimeout
  name: inactivityTimeout
  label: Inactivity Timeout
  afterElement: <span class="after">minutes</span>
  validation: integer gte:0 onblur
  description: >
    Automatically shut down idle Jupyter notebook servers if they've been inactive for some time. Set to 0 to not shut down any inactive servers.

maxServerLifetime:
    kind: panel.input.number
    id: maxServerLifetime
    name: maxServerLifetime
    label: Max Server Lifetime
    afterElement: <span class="after">hours</span>
    validation: integer gte:0 onblur
    description: >
        Automatically shut down Jupyter notebook servers after a certain amount of time regardless of activity. Set to 0 to not shut down any long running servers.

jupyterHubSetup:
  kind: panel
  name: jupyterHubSetup
  label: JupyterHub Setup
  contents:
    jupyterHubSetupTable:
      tag: "div#jupyterhub-setup-table"
    imagePreferencesScript:
      tag: script|src="~/scripts/xnat/plugin/jupyterhub/jupyterhub-hub.js"
    renderImagePreferencesTable:
      tag: script
      content: >
        XNAT.plugin.jupyterhub.hub.initSetupTable('jupyterhub-setup-table');

userAuthorization:
  kind: panel
  name: userAuthorization
  label: User Authorization
  contents:
    description:
      tag: div.warning
      element:
        style:
          marginBottom: 24px
        html:
          Users with access to Jupyter will be able to run arbitrary code from within their Jupyter servers.
          Individual users may be authorized to start Jupyter servers or all users (excluding guest users) can be
          authorized to start Jupyter servers.
    allowAllToggle:
      kind: panel.input.switchbox
      label: "Enable Jupyter for all users"
      name: allowAll
      id: allowAll
      onText: false
      offText: false
    hr:
      tag: hr#jupyter-user-auth-hr
      element:
        style:
          display: none
    jupyterUserAuthorizationPanel:
      tag: "div#jupyterhub-user-auth-container"
    jupyterUserAuthorizationScript:
      tag: script|src="~/scripts/xnat/plugin/jupyterhub/jupyterhub-user-auth.js"
    renderJupyterUserAuthorizationPanel:
      tag: script
      content: >
        XNAT.plugin.jupyterhub.users.authorization.initTable('jupyterhub-user-auth-container')

jupyterEnvironments:
  kind: panel
  name: jupyterEnvironments
  label: Jupyter Environments
  contents:
    description:
      tag: div.message
      element:
        style: "margin-bottom: 20px;"
      contents:
        "You can configure Jupyter environments in which users Jupyter notebook servers will run. These environments
        are associated with a specific Docker image and additional configuration options (such as environment variables
        and mounts) can be specified. An environment can also be associated with a Hardware configuration that
        defines the hardware resources that will be allocated to the single-user server when it is launched."
    computeSpecsTable:
      tag: "div#jupyterhub-compute-spec-configs-table"
    computeSpecsScript:
      tag: script|src="~/scripts/xnat/plugin/compute/compute-spec-configs.js"
    hardwareConfigsScript:
      tag: script|src="~/scripts/xnat/plugin/compute/hardware-configs.js"
    renderComputeSpecsTable:
      tag: script
      content: >
        XNAT.compute.computeSpecConfigs.manager('jupyterhub-compute-spec-configs-table', 'JUPYTERHUB');

hardwareConfigs:
    kind: panel
    name: hardwareConfigs
    label: Hardware
    contents:
      description:
        tag: div.message
        element:
          style: "margin-bottom: 20px;"
        contents:
          "You can create Hardware configurations that define the hardware resources that will be allocated to the
           single-user server when it is launched. Additional configuration options (such as cpu and memory limits) 
           can be specified."
      hardwareConfigsTable:
        tag: "div#jupyterhub-hardware-configs-table"
      hardwareConfigsScript:
        tag: script|src="~/scripts/xnat/plugin/compute/hardware-configs.js"
      renderHardwareConfigsTable:
        tag: script
        content: >
          XNAT.compute.hardwareConfigs.manager('jupyterhub-hardware-configs-table');

constraints:
  kind: panel
  name: constraints
  label: Constraints
  contents:
    description:
      tag: div.message
      element:
        style: "margin-bottom: 20px;"
      contents:
        "Constraints let you configure containers to run only on nodes with specific (arbitrary) metadata set, and 
        cause the deployment to fail if appropriate nodes do not exist. For instance, you can specify that your service 
        should only run on worker nodes."
    constraintsTable:
      tag: "div#jupyterhub-constraints-table"
    constraintsScript:
      tag: script|src="~/scripts/xnat/plugin/compute/constraint-configs.js"
    renderConstraintsTable:
      tag: script
      content: >
        console.log('rendering constraints table');
        XNAT.compute.constraintConfigs.manager('jupyterhub-constraints-table');

jupyterhubPreferences:
  kind: panel.form
  name: jupyterhubPreferences
  method: POST
  contentType: json
  url: /xapi/jupyterhub/preferences
  contents:
    ${jupyterhubApiUrl}
    ${jupyterHubToken}
    ${startTimeout}
    ${stopTimeout}
    ${inactivityTimeout}
    ${maxServerLifetime}
    ${workspacePath}
    ${pathTranslationArchivePrefix}
    ${pathTranslationArchiveDockerPrefix}
    ${pathTranslationWorkspacePrefix}
    ${pathTranslationWorkspaceDockerPrefix}

jupyterHubUserActivity:
  kind: panel
  name: jupyterHubUserActivity
  label: JupyterHub User Activity
  contents:
    jupyterHubActivityDescription:
      tag: div.message
      contents:
        "The User Activity panel displays all JupyterHub users and their active Jupyter notebook servers. You can stop 
        a user's server and also view a server's configuration details. The Started column indicates the server's launch 
        time, while the Last Activity column approximates the user's most recent interaction with the server. The Ready 
        column indicates whether the server is up and running or is in the process of starting or stopping."
    jupyterHubActivityTable:
      tag: "div#jupyterhub-user-activity-table"
    imagePreferencesScript:
      tag: script|src="~/scripts/xnat/plugin/jupyterhub/jupyterhub-users.js"
    renderImagePreferencesTable:
      tag: script
      content: >
        XNAT.plugin.jupyterhub.users.activity.init('jupyterhub-user-activity-table');

#################################################
####  Root Site Admin Spawner Config Object  ####
#################################################

siteSettings:
  kind: tabs
  name: jupyerhubAdminPage
  label: JupyterHub Administration
  meta:
    tabGroups:
      jupyterhubTabGroup: JupyterHub
  contains: tabs
  tabs:
    jupyterhubPreferencesTab:
      kind: tab
      name: jupyterhubPreferencesTab
      label: Setup
      group: jupyterhubTabGroup
      active: true
      contents:
        ${jupyterHubSetup}
        ${userAuthorization}
        ${jupyterEnvironments}
        ${hardwareConfigs}
        ${constraints}
    jupyterhubUserActivityTab:
      kind: tab
      name: jupyterhubUserActivityTab
      label: User Activity
      group: jupyterhubTabGroup
      active: true
      contents:
        ${jupyterHubUserActivity}